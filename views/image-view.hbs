<div class="body">
    <div class="side-panel">
        <button id="showMenu">show filters</button>
        <button id="saveFile">save file</button>
    </div>
    <div class="buttons" id="buttons"></div>
    <div class="main-panel">
        <div class="link">
            {{&link link name}}
        </div>
        <div class="img-with-filters">
            <img src="{{src}}" alt="name" id="img">
            <canvas id="canvas" style="display:none;"></canvas>
        </div>
    </div>
</div>

<script>
    let hidden = true;
    let filters = {}
    const canvas = document.getElementById('canvas')
    const context = canvas.getContext('2d')
    window.addEventListener("load", (event) => {
        const options = {
            method: "GET",
            headers: {
                "Content-Type": "application/json"
            },
        };

        fetch("/getFilters", options).then(res => res.json()).then(data => {
            filters = data
            const buttons = document.getElementById("buttons")
            buttons.innerHTML = ""
            for (opt of Object.keys(filters)) {
                buttons.innerHTML += `
                    <div class="filter-button">
                        <img src="{{src}}" alt="name" id="${opt}">
                        <button onclick="changeImageFilter('${opt}')">${opt}</button>
                    </div>
                    `
                const smallImg = document.getElementById(opt)
                smallImg.style.filter = filters[opt]
            }
        }).catch(ex => {
            console.log("Coś poszło nie tak:", ex);
        });

        const img = document.getElementById('img')
        console.log(img.src)
        let image = new Image()
        image.onload = () => {
            canvas.width = img.width // testowa szerokość, docelowo trzeba zamienić na rzeczywistą szerokość obrazka
            canvas.height = img.height // testowa wysokość, docelowo trzeba zamienić na rzeczywistą wysokość obrazka
            context.filter = "none"; // przykładowy filtr
            context.drawImage(image, 0, 0, canvas.width, canvas.height); // obrazek z filtrem widocznym na canvasie
        }
        image.src = img.src


    })

    document.getElementById("showMenu").addEventListener('click', function () {
        const buttons = document.getElementById("buttons")
        buttons.style.width = (hidden) ? "400px" : "0";
        hidden = !hidden
    })

    document.getElementById("saveFile").addEventListener('click', function () {
        let dataUrl = canvas.toBlob((blob) => {
            const formData = new FormData()
            
            let name ={{&json name}}
            const extenstion = name.slice(name.lastIndexOf("."))
            name = name.slice(0,name.lastIndexOf("/"))
            let filename = name.slice(0,name.lastIndexOf("."))

            console.log(filename, extenstion)
            formData.append('image', blob, filename+extenstion)
            formData.append('name', "losowanazwa.png")
            const options = {
                method: "POST",
                body: formData
            };
            fetch("/saveImage", options)
        })

    })


    function changeImageFilter(filter) {
        const img = document.getElementById("img")
        img.style.filter = filters[filter]

        context.filter = filters[filter] // przykładowy filtr
        context.drawImage(img, 0, 0, canvas.width, canvas.height); // obrazek z filtrem widocznym na canvasie

    }
</script>

<style>
    .side-panel {
        display: flex;
        flex-direction: column;
        align-items: center;
        padding: 20px;
        gap: 20px;
    }

    .img-with-filters>img {
        margin-left: 20px;
        width: 600px;
        height: 400px;
        object-fit: cover;
    }

    .link {
        margin-left: 20px;
        margin-top: 10px;
        margin-bottom: 10px;
    }

    .buttons {
        /*height:calc(100% - 80px); */
        background-color: #2f3e46;
        width: 0;
        overflow: hidden;
        transition: width 0.2s linear;
        display: flex;
        justify-content: center;
        flex-direction: column;
        gap: 10px;

    }

    .filter-button {
        display: flex;
        flex-direction: column;
        gap: 10px;
        align-items: center;
    }

    .filter-button img {
        width: calc(100% /7);
        aspect-ratio: 1;
        border-radius: 10px;
    }

    .filter-button button {
        font-size: 10px;
        border: none;
        outline: none;
        background-color: #2d2d2d;
        color: #cad2c5;
        border-radius: 5px;
        cursor: pointer;
        padding: 5px;
        padding-left: 10px;
        padding-right: 10px;
    }
</style>